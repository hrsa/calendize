networks:
    calendize-network:
        driver: bridge

volumes:
    postgres_data:
        driver: local
    redis_data:
        driver: local


services:

    nginx:
        build:
            context: .
            dockerfile: ./docker/nginx.dockerfile
            target: dev
            args:
                - UID=${UID:-1000}
                - GID=${GID:-1000}
                - USER=${USER:-anton}
        restart: unless-stopped
        container_name: nginx
        volumes:
            - ./:/var/www/
        ports:
            - 8000:8000
        depends_on:
            - php
            - redis
            - db
            - queue
        extra_hosts:
            - "host.docker.internal:host-gateway"
        networks:
            - calendize-network

    php:
        build:
            context: .
            dockerfile: ./docker/php.dockerfile
            target: php
            args:
                - UID=${UID:-1000}
                - GID=${GID:-1000}
                - USER=${USER:-anton}
        container_name: php
        volumes:
            - ./:/var/www/
        depends_on:
            db:
                condition: service_healthy
            redis:
                condition: service_healthy
        ports:
            - ":9000"
        extra_hosts:
            - "host.docker.internal:host-gateway"
        networks:
            - calendize-network

    queue:
        build:
            context: .
            dockerfile: ./docker/php.dockerfile
            args:
                - UID=${UID:-1000}
                - GID=${GID:-1000}
                - USER=${USER:-anton}
        container_name: queue
        ports:
            - 8080:8080
        volumes:
            - ./:/var/www/
        command: [ "/usr/bin/supervisord", "-n", "-c", "/etc/supervisor/conf.d/supervisord-queue.conf" ]
        depends_on:
            db:
                condition: service_healthy
            redis:
                condition: service_healthy
        networks:
            - calendize-network


    cron:
        build:
            context: .
            dockerfile: ./docker/php.dockerfile
            args:
                - UID=${UID:-1000}
                - GID=${GID:-1000}
                - USER=${USER:-anton}
        container_name: cron
        volumes:
            - ./:/var/www/
        depends_on:
            - db
        entrypoint: [ 'php', '/var/www/artisan', 'schedule:work' ]
        networks:
            - calendize-network

    db:
        image: postgres:latest
        container_name: postgres
        volumes:
            - postgres_data:/var/lib/postgresql/data
        environment:
            - POSTGRES_DB=${DB_DATABASE}
            - POSTGRES_USER=${DB_USERNAME}
            - POSTGRES_PASSWORD=${DB_PASSWORD}
        ports:
            - 5432:5432
        healthcheck:
            test: [ "CMD-SHELL", "pg_isready -U ${DB_USERNAME}" ]
            interval: 30s
            timeout: 30s
            retries: 3
        networks:
            - calendize-network

    redis:
        image: redis:latest
        container_name: redis
        volumes:
            - redis_data:/data
        healthcheck:
            test: [ "CMD", "redis-cli", "ping" ]
            interval: 30s
            timeout: 30s
            retries: 3
        networks:
            - calendize-network


    migrate:
        build:
            context: .
            dockerfile: ./docker/php.dockerfile
            target: base
            args:
                - UID=${UID:-1000}
                - GID=${GID:-1000}
                - USER=${USER:-laravel}
        container_name: migrate
        volumes:
            - ./:/var/www/
        depends_on:
            - db
        profiles: [ "migrate" ]
        working_dir: /var/www
        entrypoint: [ "/bin/sh","-c" ]
        command:
            - |
                php artisan migrate
        networks:
            - calendize-network


    composer:
        build:
            context: .
            dockerfile: ./docker/composer.dockerfile
            args:
                - UID=${UID:-1000}
                - GID=${GID:-1000}
                - USER=${USER:-anton}
        container_name: composer
        volumes:
            - ./:/var/www
        working_dir: /var/www
        depends_on:
            - php
        user: ${USER:-anton} #system user
        profiles: [ "composer" ]
        entrypoint: [ 'composer', '--ignore-platform-reqs' ]
        networks:
            - calendize-network


    artisan:
        build:
            context: .
            dockerfile: ./docker/php.dockerfile
            target: base
            args:
                - UID=${UID:-1000}
                - GID=${GID:-1000}
                - USER=${USER:-anton}
        container_name: artisan
        volumes:
            - ./:/var/www
        depends_on:
            - db
        working_dir: /var/www
        profiles: [ "artisan" ]
        entrypoint: [ 'php', '/var/www/artisan' ]
        networks:
            - calendize-network


    npm:
        image: node:latest
        container_name: npm
        volumes:
            - ./:/var/www
        ports:
            - 5173:5173
        working_dir: /var/www
        profiles: [ "npm" ]
        entrypoint: [ 'npm' ]
        networks:
            - calendize-network
